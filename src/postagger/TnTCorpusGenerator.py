# tagged corpus file to train the tnt tagger is generated by this module
# output : malayalam_corpus.tt
# 

from src.appconfig import ApplicationConfig

def getTrainDataFromDatukCorpus(raw_input_corpus, tnt_output_corpus):
    tagList = getMalayalamTagsList()
    f = open(raw_input_corpus,'r')
    target = open(tnt_output_corpus,"w")
    for line in f:
        if line != "":
            st1 = replaceChillu(line)
            word_list = " ".join(st1.split('\t'))
            word_list = word_list.split(" ")
            if word_list[0] != '' and word_list[0] != '\n':
                if word_list[2] in tagList:
                    print(word_list[1:3])
                    target.write('\n'+word_list[1]+'\t'+word_list[2])       
    f.close()
    target.close()        

        
def getMalayalamTagsDictionary():
    tagDict = {}
    f = open(ApplicationConfig.RESOURCE_PATH_POSTAGGER+'/malayalam_tags.tg','r')
    for line in f:
        st1 = replaceChillu(line)
        word_list = st1.split("\t")
        tagInfo = []
        for item in word_list :
            if item != "" :
                if item.endswith('\n') :
                    item = item[:-1]
                tagInfo.append(item)
        tagDict[tagInfo[0]] = tagInfo[1]
    return tagDict

def getMalayalamTagsList():
    tagList = []
    for key in getMalayalamTagsDictionary().keys():
        tagList.append(key)
    return tagList



def replaceChillu(strContent):
    strContent = strContent.replace('ല്‍','\u0D7D')
    strContent = strContent.replace('ര്‍', '\u0D7C')
    strContent = strContent.replace('ന്‍', '\u0D7B')
    strContent = strContent.replace('ള്‍', '\u0D7E')
    strContent = strContent.replace('ണ്‍', '\u0D7A')
    
    return strContent            
            


def findAdditionalWordsAndTags(raw_input_corpus, tnt_output_corpus):
    tagList = getMalayalamTagsList()
    f = open(raw_input_corpus,'r')
    target = open(tnt_output_corpus,"a")
    for line in f:
        if line != "":
            st1 = replaceChillu(line)
            if st1.endswith('\n'):
                st1 = st1[:-1]
            word_list = "--".join(st1.split('\t'))
            if word_list[:2] == "--":
                word_list = word_list.split("--")[1:]
                if word_list[0] in tagList:
                    tag = word_list[0]
                    words = word_list[1].split(', ')
                    for item in words:
                        if (' ' in item) == False  :
                            print("["+ item +" , " + tag + "]")
                            target.write('\n'+item+'\t'+tag)     
    f.close()
    target.close()        

def getTraindataFromCustomCorpus(raw_input_corpus, tnt_output_corpus):
    f = open(raw_input_corpus,'r')
    target = open(tnt_output_corpus,"a")
    for line in f:
        if line != "":
            st1 = replaceChillu(line)
            if st1.endswith('\n'):
                st1 = st1[:-1]
                wordlist = st1.split("\t")
                print(wordlist)
                target.write("\n"+wordlist[0]+"\t"+wordlist[1])
      
    
def generateCorpusForTnT():
    raw_datuk_corpus = ApplicationConfig.MALAYALAM_RAW_DATUK_CORPUS_PATH
    tnt_output_corpus = ApplicationConfig.MALAYALAM_TAGGED_CORPUS_PATH
    raw_user_corpus = ApplicationConfig.MALAYALAM_FORMATED_USER_CORPUS_PATH
    
    print("Initiating RAW Corpus file content extraction!")
    
    getTrainDataFromDatukCorpus(raw_datuk_corpus, tnt_output_corpus)
    findAdditionalWordsAndTags(raw_datuk_corpus, tnt_output_corpus)
    
    #read the user supplied tagset
    getTraindataFromCustomCorpus(raw_user_corpus, tnt_output_corpus)
    
    print("Corpus Generation completed!")  
    print("Input file1 : " +  raw_datuk_corpus)
    print("Input file : " +  raw_user_corpus)
    print("Output file : " + tnt_output_corpus)
    print("---------------------------------------------------------------")



#generateCorpusForTnT()